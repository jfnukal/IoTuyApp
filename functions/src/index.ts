import * as functions from 'firebase-functions';
import * as admin from 'firebase-admin';

admin.initializeApp();
const db = admin.firestore();

export const sendPushOnNewMessage = functions
  .region('europe-west1')
  .firestore.document('familyMessages/{messageId}')
  .onCreate(async (snapshot, context) => {
    const messageData = snapshot.data();
    
    if (!messageData) {
      console.log('‚ùå Nov√° zpr√°va nem√° ≈æ√°dn√° data.');
      return;
    }

    console.log(`üì® Zpracov√°v√°m zpr√°vu s ID: ${context.params.messageId}`);
    console.log(`üë§ Odes√≠latel: ${messageData.senderName}`);
    console.log(`üí¨ Zpr√°va: ${messageData.message}`);

    const recipients = messageData.recipients.filter(
      (id: string) => id !== messageData.senderId
    );

    if (recipients.length === 0) {
      console.log('‚ÑπÔ∏è ≈Ω√°dn√≠ p≈ô√≠jemci k odesl√°n√≠ notifikace.');
      return;
    }

    console.log(`üë• P≈ô√≠jemci: ${recipients.join(', ')}`);

    const familyMemberPromises = recipients.map((memberId: string) =>
      db.collection('familyMembers').doc(memberId).get()
    );

    const familyMemberDocs = await Promise.all(familyMemberPromises);

    const authUids = familyMemberDocs
      .filter(doc => doc.exists && doc.data()?.authUid)
      .map(doc => doc.data()!.authUid);

    console.log(`üë• Nalezeno ${authUids.length} authUid pro p≈ô√≠jemce`);

    if (authUids.length === 0) {
      console.log('‚ö†Ô∏è ≈Ω√°dn√© authUid nalezeny pro p≈ô√≠jemce');
      return;
    }

    const userSettingsPromises = authUids.map((authUid: string) =>
      db.collection('userSettings').doc(authUid).get()
    );

    const userSettingsResults = await Promise.all(userSettingsPromises);

    const allTokens = userSettingsResults
      .flatMap((doc) => {
        if (!doc.exists) {
          console.log(`‚ö†Ô∏è Nastaven√≠ pro authUid ${doc.id} neexistuj√≠`);
          return [];
        }
        const tokens = doc.data()?.fcmTokens || [];
        console.log(`üîë AuthUid ${doc.id} m√° ${tokens.length} token≈Ø`);
        return tokens;
      })
      .filter((token) => token);

    if (allTokens.length === 0) {
      console.log('‚ö†Ô∏è Nenalezeny ≈æ√°dn√© FCM tokeny pro p≈ô√≠jemce.');
      return;
    }

    console.log(`‚úÖ Nalezeno celkem ${allTokens.length} FCM token≈Ø`);

    const message = {
      notification: {
        title: `üí¨ Nov√° zpr√°va od ${messageData.senderName}`,
        body: messageData.message,
      },
      data: {
        messageId: context.params.messageId,
        senderId: messageData.senderId,
        senderName: messageData.senderName,
        urgent: messageData.urgent ? 'true' : 'false',
      },
      tokens: allTokens,
    };

    try {
      const response = await admin.messaging().sendMulticast(message);
      
      console.log(`‚úÖ Notifikace odesl√°ny: ${response.successCount}/${allTokens.length}`);
      
      if (response.failureCount > 0) {
        console.warn(`‚ö†Ô∏è Nƒõkter√© notifikace selhaly: ${response.failureCount}`);
        
        response.responses.forEach((resp, idx) => {
          if (!resp.success) {
            console.error(`‚ùå Token ${idx} selhal:`, resp.error);
          }
        });
      }
    } catch (error) {
      console.error('‚ùå Chyba p≈ôi odes√≠l√°n√≠ notifikac√≠:', error);
    }
  });
